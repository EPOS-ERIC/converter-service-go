definitions:
  model.Plugin:
    properties:
      arguments:
        description: arguments for the execution (if needed (like the main java class
          name))
        type: string
      description:
        description: a description of the plugin
        type: string
      enabled:
        description: if the plugin is enabled aka if it can be used
        type: boolean
      executable:
        description: the path for the executable
        type: string
      id:
        description: the id of the plugin (generated when the plugin is created)
        type: string
      installed:
        description: if the plugin is currently installed
        type: boolean
      name:
        description: the name of the plugin
        type: string
      repository:
        description: the url from which to clone the repository
        type: string
      runtime:
        allOf:
        - $ref: '#/definitions/model.SupportedRuntimes'
        description: the runtime (binary, java, python, ...)
      version:
        description: the name of the branch if version_type is branch or the tag number
          if it is tag
        type: string
      version_type:
        allOf:
        - $ref: '#/definitions/model.VersionType'
        description: either 'branch' or 'tag'
    type: object
  model.PluginRelation:
    properties:
      id:
        description: the id of the relation (generated when the relation is created)
        type: string
      input_format:
        description: the file format expected by the plugin for the input
        type: string
      output_format:
        description: the file format expected as the output from the plugin execution
        type: string
      plugin_id:
        description: the id of the plugin (from the plugin table)
        type: string
      relation_id:
        description: the instanceId of the distribution
        type: string
    type: object
  model.SupportedRuntimes:
    enum:
    - binary
    - java
    - python
    type: string
    x-enum-varnames:
    - SupportedRuntimesBinary
    - SupportedRuntimesJava
    - SupportedRuntimesPython
  model.VersionType:
    enum:
    - branch
    - tag
    type: string
    x-enum-varnames:
    - VersionTypeBranch
    - VersionTypeTag
  routes.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
info:
  contact: {}
paths:
  /health:
    get:
      description: Check the health of the RabbitMQ connection and the database connection
      produces:
      - application/json
      responses:
        "200":
          description: Healthy
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Check the health of the service
      tags:
      - health
  /plugin-relations:
    get:
      description: Retrieve all plugin relations from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PluginRelation'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Get all plugin relations
      tags:
      - plugin-relations
    post:
      consumes:
      - application/json
      description: Create a new plugin relation in the database. The plugin relation
        ID will be assigned upon creation.
      parameters:
      - description: PluginRelation object
        in: body
        name: plugin
        required: true
        schema:
          $ref: '#/definitions/model.PluginRelation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.PluginRelation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Create a new plugin relation
      tags:
      - plugin-relations
  /plugin-relations/{id}:
    delete:
      description: Delete a plugin relation from the database
      parameters:
      - description: Plugin Relation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PluginRelation'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Delete a plugin relation
      tags:
      - plugin-relations
    get:
      description: Retrieve a plugin relation from the database
      parameters:
      - description: Plugin Relation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PluginRelation'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Get a plugin relation
      tags:
      - plugin-relations
    put:
      consumes:
      - application/json
      description: Update an existing plugin relation in the database. Even if explicitly
        passed in the body, the Id of the plugin relation will not be changed
      parameters:
      - description: Plugin Relation ID
        in: path
        name: id
        required: true
        type: string
      - description: PluginRelation object
        in: body
        name: plugin
        required: true
        schema:
          $ref: '#/definitions/model.PluginRelation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PluginRelation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Update a plugin relation
      tags:
      - plugin-relations
  /plugins:
    get:
      description: Retrieve all plugins from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Plugin'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Get all plugins
      tags:
      - plugins
    post:
      consumes:
      - application/json
      description: Create a new plugin in the database. The plugin ID will be assigned
        upon creation.
      parameters:
      - description: Plugin object
        in: body
        name: plugin
        required: true
        schema:
          $ref: '#/definitions/model.Plugin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Plugin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Create a new plugin
      tags:
      - plugins
  /plugins/{id}:
    delete:
      description: Delete a plugin from the database
      parameters:
      - description: Plugin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Plugin'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Delete a plugin
      tags:
      - plugins
    get:
      description: Retrieve a plugin from the database
      parameters:
      - description: Plugin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Plugin'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Get a plugin
      tags:
      - plugins
    put:
      consumes:
      - application/json
      description: Update an existing plugin in the database. Even if explicitly passed
        in the body, the Id of the plugin will not be changed
      parameters:
      - description: Plugin ID
        in: path
        name: id
        required: true
        type: string
      - description: Plugin object
        in: body
        name: plugin
        required: true
        schema:
          $ref: '#/definitions/model.Plugin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Plugin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/routes.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Update a plugin
      tags:
      - plugins
  /plugins/{id}/disable:
    post:
      description: Disable a plugin by its ID
      parameters:
      - description: Plugin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Plugin {id} disabled correctly
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Disable a plugin
      tags:
      - plugins
  /plugins/{id}/enable:
    post:
      description: Enable a plugin by its ID
      parameters:
      - description: Plugin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Plugin {id} enabled correctly
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.HTTPError'
      summary: Enable a plugin
      tags:
      - plugins
swagger: "2.0"
