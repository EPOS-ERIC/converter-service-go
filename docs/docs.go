// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Check the health of the RabbitMQ connection and the database connection",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check the health of the service",
                "responses": {
                    "200": {
                        "description": "Healthy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/plugin-relations": {
            "get": {
                "description": "Retrieve all plugin relations from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugin-relations"
                ],
                "summary": "Get all plugin relations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PluginRelation"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new plugin relation in the database. The plugin relation ID will be assigned upon creation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugin-relations"
                ],
                "summary": "Create a new plugin relation",
                "parameters": [
                    {
                        "description": "PluginRelation object",
                        "name": "plugin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PluginRelation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.PluginRelation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/plugin-relations/{id}": {
            "get": {
                "description": "Retrieve a plugin relation from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugin-relations"
                ],
                "summary": "Get a plugin relation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plugin Relation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PluginRelation"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing plugin relation in the database. Even if explicitly passed in the body, the Id of the plugin relation will not be changed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugin-relations"
                ],
                "summary": "Update a plugin relation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plugin Relation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PluginRelation object",
                        "name": "plugin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PluginRelation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PluginRelation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a plugin relation from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugin-relations"
                ],
                "summary": "Delete a plugin relation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plugin Relation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PluginRelation"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/plugins": {
            "get": {
                "description": "Retrieve all plugins from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Get all plugins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Plugin"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new plugin in the database. The plugin ID will be assigned upon creation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Create a new plugin",
                "parameters": [
                    {
                        "description": "Plugin object",
                        "name": "plugin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Plugin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Plugin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/plugins/{id}": {
            "get": {
                "description": "Retrieve a plugin from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Get a plugin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plugin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Plugin"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing plugin in the database. Even if explicitly passed in the body, the Id of the plugin will not be changed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Update a plugin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plugin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Plugin object",
                        "name": "plugin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Plugin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Plugin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a plugin from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Delete a plugin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plugin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Plugin"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/plugins/{id}/disable": {
            "post": {
                "description": "Disable a plugin by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Disable a plugin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plugin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plugin {id} disabled correctly",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/plugins/{id}/enable": {
            "post": {
                "description": "Enable a plugin by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Enable a plugin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plugin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plugin {id} enabled correctly",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Plugin": {
            "type": "object",
            "properties": {
                "arguments": {
                    "description": "arguments for the execution (if needed (like the main java class name))",
                    "type": "string"
                },
                "description": {
                    "description": "a description of the plugin",
                    "type": "string"
                },
                "enabled": {
                    "description": "if the plugin is enabled aka if it can be used",
                    "type": "boolean"
                },
                "executable": {
                    "description": "the path for the executable",
                    "type": "string"
                },
                "id": {
                    "description": "the id of the plugin (generated when the plugin is created)",
                    "type": "string"
                },
                "installed": {
                    "description": "if the plugin is currently installed",
                    "type": "boolean"
                },
                "name": {
                    "description": "the name of the plugin",
                    "type": "string"
                },
                "repository": {
                    "description": "the url from which to clone the repository",
                    "type": "string"
                },
                "runtime": {
                    "description": "the runtime (binary, java, python, ...)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.SupportedRuntimes"
                        }
                    ]
                },
                "version": {
                    "description": "the name of the branch if version_type is branch or the tag number if it is tag",
                    "type": "string"
                },
                "version_type": {
                    "description": "either 'branch' or 'tag'",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.VersionType"
                        }
                    ]
                }
            }
        },
        "model.PluginRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "the id of the relation (generated when the relation is created)",
                    "type": "string"
                },
                "input_format": {
                    "description": "the file format expected by the plugin for the input",
                    "type": "string"
                },
                "output_format": {
                    "description": "the file format expected as the output from the plugin execution",
                    "type": "string"
                },
                "plugin_id": {
                    "description": "the id of the plugin (from the plugin table)",
                    "type": "string"
                },
                "relation_id": {
                    "description": "the instanceId of the distribution",
                    "type": "string"
                }
            }
        },
        "model.SupportedRuntimes": {
            "type": "string",
            "enum": [
                "binary",
                "java",
                "python"
            ],
            "x-enum-varnames": [
                "SupportedRuntimesBinary",
                "SupportedRuntimesJava",
                "SupportedRuntimesPython"
            ]
        },
        "model.VersionType": {
            "type": "string",
            "enum": [
                "branch",
                "tag"
            ],
            "x-enum-varnames": [
                "VersionTypeBranch",
                "VersionTypeTag"
            ]
        },
        "routes.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
